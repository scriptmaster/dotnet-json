on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Create Release

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Changes in this Release
            - Accept empty value for set command in dotnet json set KeyGroup::Key ""
            - ...
          draft: false
          prerelease: false

      - name: Publish dotnet-json executables
        if: success()
        run: |
          dotnet publish -c Release -o ./output/win --self-contained true -r win-x86 -p:PublishSingleFile=true -p:PublishTrimmed=true
          dotnet publish -c Release -o ./output/linux --self-contained true -r linux-x64 -p:PublishSingleFile=true -p:PublishTrimmed=true
          dotnet publish -c Release -o ./output/osx --self-contained true -r osx-x64 -p:PublishSingleFile=true -p:PublishTrimmed=true

      - name: Upload windows release asset
        if: success() && steps.publish_nuget.outputs.version != ''
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./output/win/dotnet-json.exe
          asset_name: dotnet-json.exe
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload linux release asset
        if: success() && steps.publish_nuget.outputs.version != ''
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./output/linux/dotnet-json
          asset_name: dotnet-json-linux
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload osx release asset
        if: success() && steps.publish_nuget.outputs.version != ''
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./output/osx/dotnet-json
          asset_name: dotnet-json-osx
          asset_content_type: application/json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

